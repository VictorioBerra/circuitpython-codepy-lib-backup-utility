name: dotnet package

on: [push]

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer.
  MINVERBUILDMETADATA: build.${{github.run_number}}

jobs:
  build:
    name: Build-cross-plat-via-windows
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
        
      # Run dotnet build and publish
      - name: dotnet build and publish cross plat
        run: |
          dotnet publish ./CircuitPythonBackupService -c Release -p ./publish --runtime win-x64
          dotnet publish ./CircuitPythonBackupService -c Release -o ./publish --runtime win-x86
          dotnet publish ./CircuitPythonBackupService -c Release -o ./publish --runtime linux-x64
          dotnet publish ./CircuitPythonBackupService -c Release -o ./publish --runtime linux-arm
          dotnet publish ./CircuitPythonBackupService -c Release -o ./publish --runtime linux-arm64
          dotnet publish ./CircuitPythonBackupService -c Release -o ./publish --runtime osx-x64

      - uses: papeloto/action-zip@v1
        with:
          files: publish/
          dest: publish.zip
          recursive: false
        
      - name: "Publish Artefacts"
        uses: actions/upload-artifact@v3
        with:
          name: all-platforms
          path: "./Artifacts"

      - name: Create Release
        if: ${{github.ref_type}} == 'tag'
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: '${{ github.ref }}'
            release_name: Release '${{ github.ref }}'
            draft: false
            prerelease: false

      - name: Upload Release Asset
        if: ${{github.ref_type}} == 'tag'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ./publish.zip
            asset_name: circuitpython-backup-utility.zip
            asset_content_type: application/zip      